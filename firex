004042D9   fuego
004042E0   
004042E2   
004042E7   
004042EE   
004042F0   
004042F5   
004042FB   
00404302   
00404304   
0040430E   
00404310   
00404317   
00404319   
00404323   
00404325   
0040432F   MOV ECX,DWORD PTR DS:[biWidth]
00404335   MOV DWORD PTR DS:[Y],0				;Y = 0  [ADDR: 403138]
0040433F   MOV EBX,1								// DOOOO
00404344   MOV EAX,DWORD PTR DS:[Y]
00404349   MUL ECX
0040434B   ADD EAX,DWORD PTR DS:[FuegoBuffer]				// FuegoBuffer = 403104 
00404351   MOV DWORD PTR DS:[FirstPoint],EAX					// FirstPoint = 0x40313C
00404356   MOV EAX,DWORD PTR DS:[Y]
0040435B   MUL DWORD PTR DS:[bmWidthBytes]							// bmWidthBytes  = 40310C
00404361   MOV DWORD PTR DS:[FirstPixel],EAX							// FirstPixel = 403140
00404366		MOV EDI,DWORD PTR DS:[FirstPoint]			// Do
0040436C		ADD EDI,EBX
0040436E		MOV ESI,EDI
00404370 		MOVZX EDX,BYTE PTR DS:[ECX+ESI]
00404374		AND EDX,0FE
0040437A		SHL EDX,7
0040437D		MOV EAX,EDX
0040437F		MOVZX EDX,BYTE PTR DS:[ECX+ESI-1]
00404384 		SHL EDX,3
00404387		ADD EAX,EDX
00404389		MOVZX EDX,BYTE PTR DS:[ECX+ESI+1]
0040438E		SHL EDX,3
00404391		ADD EAX,EDX
00404393		MOVZX EDX,BYTE PTR DS:[ESI+ECX*2]
00404397		SHL EDX,5
0040439A		ADD EAX,EDX
0040439C		ADD ESI,ECX
0040439E		MOVZX EDX,BYTE PTR DS:[ESI+ECX*2-1]
004043A3		SHL EDX,4
004043A6		ADD EAX,EDX
004043A8		MOVZX EDX,BYTE PTR DS:[ESI+ECX*2+1]
004043AD		SHL EDX,4
004043B0		ADD EAX,EDX
004043B2		MOV EDX,DWORD PTR DS:[403144]
004043B8		MUL EDX
004043BA		MOV EAX,EDX
004043BC		MOV BYTE PTR DS:[EDI],AL
004043BE		MOV EDI,DWORD PTR DS:[403108]				// 2° buffer pixelBuffer
004043C4		LEA EDX,DWORD PTR DS:[EBX+EBX*2]
004043C7		ADD EDI,EDX
004043C9		ADD EDI,DWORD PTR DS:[FirstPixel]
004043CF		MOV EAX,DWORD PTR DS:[EAX*4+403180]			// pick palette
004043D6		MOV DWORD PTR DS:[EDI],EAX
004043D8		INC EBX
004043D9		CMP EBX,18F
004043DF		JB SHORT Copy_of_.00404366					// Loop while
004043E1   INC DWORD PTR DS:[Y]
004043E7   CMP DWORD PTR DS:[Y],0C5
004043F1   JNZ Copy_of_.0040433F
004043F7   MOV ECX,DWORD PTR DS:[403148]
004043FD   SHL ECX,5
00404400   CMP ECX,DWORD PTR DS:[403118]
00404406   JBE SHORT Copy_of_.0040440E
00404408   MOV ECX,DWORD PTR DS:[403118]
0040440E   MOV DWORD PTR DS:[Y],0C5
00404418   MOV EBX,1
0040441D   MOV EAX,DWORD PTR DS:[Y]
00404422   MUL DWORD PTR DS:[403118]
00404428   ADD EAX,DWORD PTR DS:[FuegoBuffer]
0040442E   MOV DWORD PTR DS:[FirstPoint],EAX
00404433   MOV EAX,DWORD PTR DS:[Y]
00404438   MUL DWORD PTR DS:[bmWidthBytes]
0040443E   MOV DWORD PTR DS:[FirstPixel],EAX
00404443   MOV EDI,DWORD PTR DS:[FirstPoint]
00404449   ADD EDI,EBX
0040444B   CALL Copy_of_.00404543
00404450   AND EAX,0FF
00404455   MOV BYTE PTR DS:[EDI],AL
00404457   MOV EDI,DWORD PTR DS:[403108]
0040445D   LEA EDX,DWORD PTR DS:[EBX+EBX*2]
00404460   ADD EDI,EDX
00404462   ADD EDI,DWORD PTR DS:[FirstPixel]
00404468   MOV EAX,DWORD PTR DS:[EAX*4+403180]
0040446F   MOV DWORD PTR DS:[EDI],EAX
00404471   INC EBX
00404472   CMP EBX,ECX
00404474   JB SHORT Copy_of_.00404443
00404476   INC DWORD PTR DS:[Y]
0040447C   CMP DWORD PTR DS:[Y],0C8
00404486   JNZ Copy_of_.00404418
0040448C   PUSH 0                                   ; /Erase = FALSE
0040448E   PUSH 0                                   ; |pRect = NULL
00404490   PUSH DWORD PTR DS:[403034]               ; |hWnd = 000F04CC
00404496   CALL DWORD PTR DS:[<&USER32.InvalidateRe>; \InvalidateRect
0040449C   PUSH DWORD PTR DS:[403034]               ; /hWnd = 000F04CC
004044A2   CALL DWORD PTR DS:[<&USER32.UpdateWindow>; \UpdateWindow
004044A8   JMP Copy_of_.004042D9

